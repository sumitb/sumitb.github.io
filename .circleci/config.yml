# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
jobs:
  semgrep-scan:
    parameters:
      repo_path:
        type: string
        default: sumitb/hugo-sumitb
      default_branch:
        type: string
        default: main
      semgrep_deployment_id:
        type: string
        default: $SEMGREP_DEPLOYMENT_ID
    environment:
      SEMGREP_REPO_NAME: << parameters.repo_path >>
      SEMGREP_REPO_URL: << pipeline.project.git_url >>
      SEMGREP_BRANCH: << pipeline.git.branch >>
    docker:
      - image: returntocorp/semgrep-agent:v1
    steps:
      - checkout
      - run:
          name: "Semgrep scan"
          command: |
            semgrep-agent \
              --publish-deployment << parameters.semgrep_deployment_id >> \
              --publish-token $SEMGREP_APP_TOKEN \
              --baseline-ref << parameters.default_branch >>
  build:
    docker:
      - image: cibuilds/hugo:latest
    working_directory: ~/hugo
    environment:
      TARGET_BRANCH: main
      TARGET_REPO: sumitb/sumitb.github.io.git
      TARGET_BUILD_DIR: gh-pages
      HUGO_BUILD_DIR: public
    steps:
      # install git & rsync
      - run: sudo apt-get update && sudo apt-get install -y --no-install-recommends git rsync 

      # checkout the repository
      - checkout

      # install git submodules for managing third-party dependencies
      - run: git submodule sync && git submodule update --init

      # Link the public dir to the gh-pages branch
      - run: rm -fr $HUGO_BUILD_DIR

      # build with Hugo
      - run: HUGO_ENV=production hugo -v -d $HUGO_BUILD_DIR
 
      - run:
          name: test our generated HTML files
          command: |
            htmlproofer $HUGO_BUILD_DIR --allow-hash-href --check-html \
            --empty-alt-ignore --disable-external

      - add_ssh_keys:
          fingerprints:
            - "88:0f:18:47:6c:8f:08:12:a3:66:ae:3c:0e:c1:37:34"

      # Get github pages repo
      - run: git clone --branch=$TARGET_BRANCH git@github.com:$TARGET_REPO ${TARGET_BUILD_DIR}

      # Copy hugo build files to gh-pages repo
      - run: rsync -r --exclude=.git --delete ${HUGO_BUILD_DIR}/ ${TARGET_BUILD_DIR}
      - run: cd $TARGET_BUILD_DIR && git add -f .

      # Set some variables to add to the commit message
      - run: cd $TARGET_BUILD_DIR && git config --global user.email "builds@circleci.com" && git config --global user.name "CircleCI Bot"
      - run: cd $TARGET_BUILD_DIR && git commit -m "Automated CircleCI build $CIRCLE_BUILD_NUM published to Github Pages"
      - run: cd $TARGET_BUILD_DIR && git push -f origin $TARGET_BRANCH

      - deploy:
          name: Deploy static pages to Github Pages
          command: |
            if [ "${CIRCLE_BRANCH}" = "main" ]; then
              if [ cd $TARGET_BUILD_DIR ] && [ git commit -m "Automated CircleCI build $CIRCLE_BUILD_NUM published to Github Pages" ] ; then
                # Push the generated files back to github
                cd $TARGET_BUILD_DIR && git push -f origin $TARGET_BRANCH
              else
                echo "Content not changed, nothing to deploy"
              fi
            else
              echo "Not master branch, dry run only"
            fi
workflows:
  main:
    jobs:
      - semgrep-scan
      - build
